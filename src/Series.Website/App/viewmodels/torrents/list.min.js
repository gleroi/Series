define(["require","exports","services/series.services"],function(n,t,i){var r=i;(function(n){function u(t){var i=ko.mapping.toJS(t);console.log("updateTorrent (vm):",i),n.torrentsService.update(i)}function f(){n.libraryService.get().then(function(i){var r=ko.utils.arrayMap(i,function(n){var i=new t(null);return i.Id(n.id()),i.Title(n.title()),i});console.log(r),n.series(r)}).fail(function(n){console.error("getSerie",n)})}function e(i){n.torrentsService.get(i.Id()).then(function(n){var r=ko.utils.arrayMap(n.Series,function(n){return new t(n)});r!=null&&r.length>0&&i.Torrents(r[0].Torrents())}).fail(function(n){console.error(n)})}function o(){f()}n.displayName="Torrents",n.series=ko.observableArray(),n.torrentsService=new r.Series.TorrentService,n.libraryService=new r.Series.LibraryService;var t=function(){function n(n){this.Id=ko.observable(),this.Title=ko.observable(),this.Torrents=ko.observableArray(),this.Ignore=ko.observable(),this.Visible=ko.observable(!1),ko.mapping.fromJS(n,{Torrents:{create:function(n){return new i(n.data)}}},this),this.Ignore(!1)}return n.prototype.toggleVisible=function(){var n=this,t=n.Visible();t||e(n),n.Visible(!t)},n}(),i=function(){function n(n){var t=this;this.Id=ko.observable(),this.Filename=ko.observable(),this.Status=ko.observable(),ko.mapping.fromJS(n,null,this),this.Ignore=ko.computed({read:function(){return t.Status()==0},write:function(){t.Status(t.Status()==0?1:0),u(t)}})}return n}();o()})(t.Torrents||(t.Torrents={}))})